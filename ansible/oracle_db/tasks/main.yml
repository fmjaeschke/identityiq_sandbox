---
# tasks file for oracle_db

- name: Oracle Role
  set_fact:
    role_oracle_started: yes
  tags:
    - always

- block:
    - name: make sure docker is running
      import_tasks: docker.yml

    - name: Install community.docker collection from Ansible Galaxy
      command: ansible-galaxy collection install community.docker
      changed_when: false

    - name: Check docker image current status
      docker_image_info:
        name: '{{ oracle_docker_name }}'
      register: last_result
      ignore_errors: yes
      become: true

    - name: Check if oracle database container tarball exists
      stat:
        path: '/vagrant/oracle_database_{{ oracle_version }}.tar'
      register: stat_oracle_database_result

    - name: Check if oracle linux container tarball exists
      stat:
        path: /vagrant/oracle_linux.tar
      register: stat_oracle_linux_result

    - name: load database container from tarball
      docker_image:
        name: '{{ oracle_docker_name }}'
        load_path: '/vagrant/oracle_database_{{ oracle_version }}.tar'
        state: present
        source: load
        timeout: 1800
      become: true
      when: last_result is defined and last_result.images == [] and stat_oracle_database_result.stat.exists and stat_oracle_linux_result.stat.exists

    - name: load oraclelinux container from tarball
      docker_image:
        name: oraclelinux:7-slim
        load_path: /vagrant/oracle_linux.tar
        state: present
        source: load
      become: true
      when: last_result is defined and last_result.images == [] and stat_oracle_database_result.stat.exists and stat_oracle_linux_result.stat.exists

    - name: Import prepare
      import_tasks: prepare.yml
      when: last_result is defined and last_result.images == [] and not stat_oracle_database_result.stat.exists or not stat_oracle_linux_result.stat.exists
      notify:
        - clean build

    - name: Check database docker image status if image was build or installed from tarball
      docker_image_info:
        name: '{{ oracle_docker_name }}'
      ignore_errors: no
      become: true
      when: last_result is defined and last_result.images == []

    - name: Check oraclelinux docker image status  if image was build or installed from tarball
      docker_image_info:
        name: oraclelinux:7-slim
      become: true
      ignore_errors: no
      when: last_result is defined and last_result.images == []

    - name: Archive database container image as a tarball
      docker_image:
        name: '{{ oracle_docker_name }}'
        archive_path: '/vagrant/oracle_database_{{ oracle_version }}.tar'
        source: pull
        state: present
      become: true
      when: not stat_oracle_database_result.stat.exists

    - name: Archive oraclelinux container image as a tarball
      docker_image:
        name: oraclelinux:7-slim
        archive_path: /vagrant/oracle_linux.tar
        source: pull
        state: present
      become: true
      when: not stat_oracle_linux_result.stat.exists

    - name: create oracle user
      user:
        name: oracle
        shell: /sbin/nologin
        home: /opt/oracle
        uid: 54321
        create_home: true
      become: true

    - name: create data volume
      file:
        path: /opt/oracle/oradata
        state: directory
        owner: oracle
        group: oracle
        mode: 0750
        recurse: yes
      become: true

    - name: create db setup folder
      file:
        path: /opt/oracle/scripts/setup
        state: directory
        owner: oracle
        group: oracle
        mode: 0750
        recurse: yes
      become: true

    - name: create db startup folder
      file:
        path: /opt/oracle/scripts/startup
        state: directory
        owner: oracle
        group: oracle
        mode: 0750
        recurse: yes
      become: true

    - name: Configure Oracle service
      template:
        src: oracle.service.j2
        dest: /etc/systemd/system/oracle.service
        owner: oracle
        group: oracle
        mode: 0550
      become: true
      notify:
        - Start oracle
